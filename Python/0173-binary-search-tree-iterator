# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class BSTIterator(object):
    def __init__(self, root):
        self._branch = []
        self._findLeftmost(root)
    
    def _findLeftmost(self, node):
        branch = self._branch
        while node is not None:
            branch.append(node)
            node = node.left

    def hasNext(self):
        return bool(self._branch)

    def next(self):
        node = self._branch.pop()
        self._findLeftmost(node.right)
        return node.val
        


# Your BSTIterator object will be instantiated and called as such:
# obj = BSTIterator(root)
# param_1 = obj.next()
# param_2 = obj.hasNext()